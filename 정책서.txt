# 01. 유지보수 서비스 유형

## 개요
IT 솔루션 기업에서 제공하는 유지보수 서비스는 지원 성격에 따라 6가지 주요 유형으로 구분됩니다.

## 서비스 유형

### MA (Maintenance Agreement) - 유지보수 계약
- **정의**: 계약 기반의 고객 시스템 지속 관리 서비스
- **특징**: SLA와 서비스 범위를 명확히 정의하여 연단위 갱신

### SM (System Maintenance) - 시스템 유지보수
- **정의**: 시스템 운영 상태를 안정적으로 유지하는 일상 관리 업무
- **특징**: ITIL 기반 요청/장애/변경 관리 절차 적용

### TSS (Technical Support Service) - 기술지원 서비스
- **정의**: 전화/이메일을 통한 기술 자문 및 문제 해결 지원
- **특징**: L1 → L2/L3 → 개발팀 에스컬레이션 체계 운영

### SR (Service Request) - 서비스 요청
- **정의**: 고객의 신규 요청 사항 접수 및 처리
- **절차**: 접수 → 영향도 평가 → 승인 → 작업 수행

### CR/ADC (Change Request/Additional Development & Customization) - 변경/추가개발 요청
- **정의**: 기능 수정, 추가 개발 등 요구사항 변경 처리
- **절차**: 요건 분석 → 견적 산출 → 계약 변경 → 개발/테스트 → 배포

### PM (Preventive Maintenance) - 예방 점검
- **정의**: 정기점검을 통한 사전 문제 예방 및 성능 최적화
- **특징**: 월간/분기별 정기 일정에 따른 계획적 수행

## 책임 조직

| 서비스 유형 | 담당 조직 | 역할 |
|------------|----------|------|
| **MA** | 영업/사업관리팀 | 계약 체결 및 관리 |
| **SM** | 유지보수 운영팀 (CS팀) | 일상 운영 및 관리 |
| **TSS** | 헬프데스크/콜센터 (L1)<br>전문 엔지니어/개발자 (L2/L3) | 1차 대응 및 전문 기술 지원 |
| **SR/CR** | 서비스 매니저 + 개발팀 | 고객 소통 및 실행 |
| **PM** | 유지보수 기술팀 | 정기점검 수행 |
| **품질관리** | SLA 매니저 | 전체 서비스 수준 감독 |

## 📝 필수 양식 및 문서

### 계약 관리
- **유지보수 계약서**: 서비스 범위, 기간, SLA, 비상연락망

### 요청 관리
- **SR 요청서**: 요청 내용, 긴급도, 요청자 정보
- **CR 요청서**: 변경 목적, 상세 요구사항, 예상 영향, 비용

### 점검 관리
- **점검 체크리스트**: 서버 자원, 로그, 보안패치 현황
- **유지보수 보고서**: 점검 결과 및 조치 사항

## 💡 운영 팁

1. **표준화된 템플릿** 활용으로 업무 일관성 확보
2. **이력 관리 시스템**을 통한 모든 요청/변경 사항 추적
3. **정기적인 SLA 모니터링**으로 서비스 품질 유지
4. **에스컬레이션 절차** 명확화로 신속한 문제 해결

# 02. SLA 체계

## 📋 개요
SLA(Service Level Agreement)는 서비스 제공자와 고객 간에 합의한 서비스 수준을 명문화한 계약으로, 응답시간, 복구시간, 예외처리, 페널티 기준을 포함합니다.

## ⏱️ 핵심 지표

### 응답 시간 (Response Time)
- **정의**: 고객 문의나 장애 신고 후 초기 대응을 제공하기까지의 시간
- **측정**: 접수 시점부터 첫 대응 시작까지

### 복구 시간 (MTTR - Mean Time to Restore)
- **정의**: 장애 발생 시 서비스 복구까지 걸리는 평균 시간
- **측정**: 장애 감지부터 서비스 정상화까지

### 가용성 (Availability)
- **정의**: 전체 서비스 시간 대비 정상 운영 시간 비율
- **목표**: 일반적으로 99.9% 이상

## 📊 Severity 등급별 SLA 기준

| 등급 | 응답시간 | 복구시간 | 설명 |
|------|---------|---------|------|
| **Critical** | 15분 이내 | 4시간 이내 | 시스템 전체 중단 |
| **High** | 1시간 이내 | 8시간 이내 | 주요 기능 장애 |
| **Medium** | 4시간 이내 | 24시간 이내 | 일부 기능 장애 |
| **Low** | 1영업일 이내 | 3영업일 이내 | 경미한 문제 |

## 🔄 운영 절차

### 1. SLA 수립 과정
1. **서비스 범위 정의**: 대상 시스템 및 서비스 항목
2. **성능 지표 설정**: 가용성, 응답/복구 시간 목표
3. **고객 협의**: SLA 수준 및 조건 합의
4. **계약 체결**: SLA 문서 작성 및 계약 포함

### 2. 모니터링 및 보고
- **실시간 모니터링**: 자동화된 시스템으로 SLA 지표 추적
- **정기 보고**: 월별/분기별 SLA 준수 현황 보고서 생성
- **예외 상황 대응**: SLA 위반 시 즉시 원인 분석 및 개선

## ⚠️ 예외 처리 조건

### 면책 사항
- **계획된 정기 유지보수**: 사전 합의된 시스템 점검 시간
- **불가항력 상황**: 천재지변, 대규모 정전 등
- **고객 측 귀책 사유**: 잘못된 조작으로 인한 장애
- **제3자 서비스 장애**: 통신사, 클라우드 업체 등의 문제

### 예외 적용 절차
1. 예외 상황 발생 시 즉시 고객 통보
2. 사유서 및 증빙 자료 제출
3. 고객과 협의를 통한 면책 범위 결정

## 💰 페널티 기준

### 보상 유형
- **서비스 크레딧**: 다음 달 요금에서 차감
- **요금 할인/환불**: 일정 비율 할인 적용
- **무상 서비스 연장**: 추가 지원 기간 제공

### 페널티 산정 기준

| SLA 위반 수준 | 페널티 비율 | 적용 방식 |
|--------------|------------|----------|
| **가용성 99.0% 미달** | 월 요금의 5% | 다음 달 할인 |
| **가용성 98.0% 미달** | 월 요금의 10% | 다음 달 할인 |
| **Critical 복구시간 초과** | 월 요금의 15% | 크레딧 지급 |
| **연속 SLA 위반** | 계약 해지권 부여 | 고객 선택 |

### 페널티 한도
- **월 최대 보상**: 해당 월 유지보수료의 50%
- **연 최대 보상**: 연간 계약금액의 25%

## 📈 성과 관리

### 인센티브 제도
- **SLA 준수율 100%**: 계약 자동 연장 우선권
- **지속적 초과 달성**: 추가 서비스 할인 혜택
- **고객 만족도 우수**: 장기 계약 인센티브

### 지속적 개선
- **정기 SLA 검토**: 분기별 성과 분석 및 개선안 도출
- **고객 피드백 반영**: 서비스 수준 조정 및 계약 개선
- **벤치마킹**: 업계 표준 대비 경쟁력 분석

# 03. 유지보수 요율 및 등급별 패키지

## 📋 개요
유지보수 요율은 소프트웨어/시스템 가격 대비 유지보수 비용의 비율로, 업계 표준은 연 15~20% 수준입니다. 고객 요구사항에 따라 Bronze부터 Platinum까지 4단계 등급별 패키지를 제공합니다.

## 💰 요율 기준

### 업계 표준 요율
- **일반적 범위**: 연 15~20% (라이선스 비용 기준)
- **예시**: 라이선스 1억원 → 연 유지보수료 1,500만~2,000만원
- **산정 공식**: 유지보수 난이도 점수 × 5% + 10% (공공분야 가이드라인 참고)

### 요율 결정 요소
- **제품 가격**: 초기 라이선스 비용
- **시스템 규모**: 사용자 수, 데이터량, 인프라 규모
- **중요도**: 비즈니스 크리티컬 수준
- **기술 난이도**: 시스템 복잡성 및 전문성

## 🏆 등급별 패키지 구성

### Bronze 패키지 (기본형)
- **요율**: 10~15%
- **지원시간**: 평일 업무시간 (10×5)
- **응답시간**: 4시간 이내
- **복구목표**: 2일 이내
- **대상**: 비중요 시스템, 예산 제약 고객

### Silver 패키지 (표준형)
- **요율**: 15~18%
- **지원시간**: 연장 지원 (16×7) 또는 주말 제한적 지원
- **응답시간**: 2시간 이내
- **복구목표**: 1일 이내
- **대상**: 일반 비즈니스 시스템

### Gold 패키지 (고급형)
- **요율**: 18~20%
- **지원시간**: 24×7 연중무휴
- **응답시간**: 1시간 이내
- **복구목표**: 수시간 이내
- **특징**: 긴급 상황 즉각 대응, 우선순위 지원

### Platinum 패키지 (프리미엄형)
- **요율**: 20~25%
- **지원시간**: 24×7 연중무휴
- **응답시간**: 30분 이내
- **복구목표**: 4시간 이내
- **특별서비스**: 
  - 전담 엔지니어 (TAM) 배정
  - 정기 현장 방문 점검
  - 맞춤형 성능 튜닝
  - 금융권 등 중요 고객 특화

## 📊 패키지 비교표

| 구분 | Bronze | Silver | Gold | Platinum |
|------|--------|--------|------|----------|
| **요율** | 10-15% | 15-18% | 18-20% | 20-25% |
| **지원시간** | 10×5 | 16×7 | 24×7 | 24×7 |
| **응답시간** | 4시간 | 2시간 | 1시간 | 30분 |
| **복구목표** | 2일 | 1일 | 수시간 | 4시간 |
| **전담 엔지니어** | ❌ | ❌ | ❌ | ✅ |
| **정기 점검** | ❌ | ❌ | ✅ | ✅ |
| **현장 방문** | ❌ | ❌ | 제한적 | 정기적 |
| **성능 튜닝** | ❌ | ❌ | ❌ | ✅ |

## 🔄 운영 절차

### 1. 요율 산정 과정
1. **시스템 분석**: 규모, 복잡성, 중요도 평가
2. **난이도 점수 산출**: 기술적 요소 및 위험도 반영
3. **요율 계산**: 공식 적용 또는 협상을 통한 결정
4. **패키지 선택**: 고객 요구사항에 맞는 등급 제안

### 2. 계약 및 청구
- **계약 기간**: 연 단위 계약 (자동 갱신 조항 포함)
- **청구 방식**: 연 선불 또는 분기별 청구
- **조정 절차**: 연중 패키지 업그레이드/다운그레이드 가능

## 🎯 유연 지원 옵션

### 임시 업그레이드
- **대상**: Bronze/Silver 고객의 긴급 상황
- **방식**: 시간당 추가 요금으로 24시간 지원 제공
- **요금**: 시간당 20만원 (예시)

### 맞춤형 서비스
- **부분 업그레이드**: 특정 기간만 상위 등급 서비스
- **이벤트 지원**: 대형 프로젝트 기간 중 특별 지원
- **교육 서비스**: 사용자 교육 및 운영 가이드 제공

## 📈 고객 관리 전략

### 정기 리뷰
- **주기**: 연 1회 서비스 리뷰 회의
- **내용**: 현재 등급 적정성 검토
- **목적**: 고객 비즈니스 변화에 따른 서비스 최적화

### 서비스 카탈로그
- **문서화**: 등급별 서비스 항목 상세 명시
- **활용**: 견적 제안서 및 고객 상담 자료
- **업데이트**: 분기별 서비스 내용 검토 및 개선

## 💡 운영 팁

1. **명확한 차별화**: 등급 간 서비스 차이를 구체적으로 제시
2. **유연성 확보**: 고객 상황에 맞는 임시 옵션 제공
3. **가치 증명**: 상위 등급의 ROI 및 비즈니스 가치 강조
4. **관계 관리**: 정기적인 고객 소통으로 만족도 향상

# 04. 라이선스 정책

## 📋 개요
라이선스 정책은 소프트웨어 이용 권한의 형태와 과금 기준을 규정합니다. 영구/구독 방식과 코어/사용자 단위 등 다양한 모델로 구성되며, 유지보수 서비스와 밀접한 관련이 있습니다.

## 🔐 라이선스 유형

### 이용 기간별 분류

#### 영구 라이선스 (Perpetual License)
- **정의**: 한 번 구매 시 기간 제한 없이 영구 사용 가능
- **특징**: 
  - 초기 일시지불 방식
  - 1년간 무상 하자보수 포함
  - 이후 별도 유지보수 계약(MA) 필요
  - 연 15~20% 유지보수료 부과

#### 구독 라이선스 (Subscription License)
- **정의**: 정해진 기간 동안만 사용 권한을 부여
- **특징**:
  - 월간/연간 정기 과금
  - 초기 도입 비용 낮음
  - 구독 기간 중 모든 업데이트/지원 포함
  - 기간 만료 시 지원 중단

### 과금 기준별 분류

#### 코어 단위 라이선스 (Core-based)
- **산정 기준**: 물리/가상 CPU 코어 수
- **적용 분야**: 데이터베이스, 미들웨어, 엔터프라이즈 소프트웨어
- **특징**: 
  - 서버 성능에 비례한 과금
  - 멀티코어 환경 반영
  - 코어 팩터(Core Factor) 적용 가능

#### 사용자 단위 라이선스 (User-based)
- **Named User**: 개별 사용자 계정당 라이선스
- **Concurrent User**: 동시 접속 가능한 최대 사용자 수
- **적용 분야**: 그룹웨어, ERP, 콜센터 시스템
- **특징**: 사용자 규모에 따른 선형적 과금

#### 기타 라이선스 모델
- **장치 단위**: 설치/사용 장비 대수 기준
- **사이트 라이선스**: 기업/지사 단위 일괄 계약
- **종량제**: 사용 리소스/트랜잭션량 기반 과금

## 📊 라이선스 모델 비교

| 구분 | 영구 라이선스 | 구독 라이선스 |
|------|-------------|-------------|
| **초기 비용** | 높음 (일시지불) | 낮음 (정기지불) |
| **총 소유 비용** | 장기 사용 시 유리 | 단기 사용 시 유리 |
| **유지보수** | 별도 계약 필요 | 구독료에 포함 |
| **업데이트** | MA 계약 시에만 | 구독 기간 중 제공 |
| **예산 계획** | 대규모 초기 투자 | 예측 가능한 운영비 |
| **중단 위험** | 낮음 (영구 보장) | 높음 (갱신 필요) |

## 🔄 유지보수 연계 정책

### 영구 라이선스 유지보수
1. **무상 기간**: 구매 후 1년간 무상 하자보수
2. **MA 전환**: 무상 기간 종료 후 유상 유지보수 계약
3. **요율 적용**: 라이선스 금액의 15~20% 연간 부과
4. **일괄 계약**: 동일 제품 모든 라이선스 일괄 유지보수 원칙

### 구독 라이선스 유지보수
1. **포함 서비스**: 구독료에 유지보수 비용 포함
2. **지원 범위**: 업데이트, 기술지원, 패치 등 전체 포함
3. **갱신 관리**: 기간 만료 전 갱신 절차 안내
4. **중단 조건**: 미갱신 시 즉시 지원 중단

## 📈 라이선스 확장 관리

### 용량 증설 대응
- **코어 기반**: 서버 증설 시 추가 코어 라이선스
- **사용자 기반**: 직원 증가 시 사용자 라이선스 추가
- **모니터링**: 정기적인 사용량 점검 및 컴플라이언스 확인

### 변경 절차
1. **요구사항 접수**: 고객 환경 변화 파악
2. **라이선스 산정**: 추가 필요 수량 계산
3. **견적 제공**: 추가 라이선스 및 유지보수 비용
4. **계약 변경**: 기존 계약 수정 또는 추가 계약

## 🎯 정책 운영 가이드

### 영업 단계 가이드라인
- **최적 모델 제안**: 고객 환경에 맞는 라이선스 유형 권장
- **과소/과다 구매 방지**: 정확한 용량 산정으로 비용 최적화
- **성장 계획 반영**: 향후 확장 가능성 고려한 라이선스 설계

### 계약 관리 원칙
- **명확한 조건**: 라이선스 범위, 제한사항 명시
- **컴플라이언스**: 라이선스 위반 방지를 위한 모니터링
- **갱신 알림**: 구독/유지보수 만료 사전 통지

### 고객 소통 전략
- **정책 교육**: 라이선스 모델별 장단점 설명
- **비용 분석**: TCO(Total Cost of Ownership) 비교 제공
- **유연성 강조**: 비즈니스 변화에 따른 조정 가능성 안내

## 💡 운영 팁

1. **트렌드 반영**: 구독 모델로의 업계 전환 추세 고려
2. **하이브리드 접근**: 영구+구독 혼합 모델 검토
3. **클라우드 연계**: 클라우드 환경에 적합한 라이선스 정책 수립
4. **정기 검토**: 연간 라이선스 정책 및 요율 재평가





## 5. 릴리즈 관리 및 비용정책

### 5.1 개요
소프트웨어 릴리즈 관리에서는 변경의 규모와 성격에 따라 릴리즈 유형을 구분하며, 각각 다른 제공 방식과 비용 정책을 적용합니다.

### 5.2 릴리즈 유형 분류

#### 5.2.1 패치 (Patch)
- **정의**: 버그 수정, 보안 취약점 대응 등 최소한의 변경사항
- **특징**: 
  - 핫픽스 형태로 긴급 배포
  - 기능 추가 없이 안정성 향상이 목적
  - 운영 중 즉시 적용 가능

#### 5.2.2 업데이트 (Update)
- **정의**: 기존 기능 보완 및 소규모 신기능 추가 (마이너 릴리즈)
- **특징**:
  - 하위 호환성 유지
  - UI 개선, 성능 향상 포함
  - 점(dot) 릴리즈 (예: v1.2 → v1.3)

#### 5.2.3 업그레이드 (Upgrade)
- **정의**: 대규모 개편 및 신기능 도입 (메이저 릴리즈)
- **특징**:
  - 아키텍처 변화, 데이터베이스 엔진 변경
  - 마이그레이션 작업 수반
  - 이전 버전과 호환성 제한 (예: v1.x → v2.0)

#### 5.2.4 릴리즈 (Release)
- **정의**: 모든 배포판의 통칭 용어
- **특징**: 릴리즈 노트를 통한 변경 내역 공지

### 5.3 비용 정책

#### 5.3.1 유지보수 계약 고객
- **패치 및 마이너 업데이트**: 무상 제공
- **메이저 업그레이드**: 
  - 라이선스: 무상 또는 할인 제공
  - 업그레이드 서비스: 별도 프로젝트 비용 청구

#### 5.3.2 비유지보수 계약 고객
- **패치/업데이트**: 제공 제한
- **업그레이드**: 신규 구매 수준의 비용 또는 연체 유지보수료 납부 필요

#### 5.3.3 추가 기능 개발
- **고객 맞춤형 개발**: CR/ADC 범주로 별도 과금
- **정식 릴리즈 포함 시**: 일정 기간 독점 후 일반 기능 전환

### 5.4 운영 가이드라인

#### 5.4.1 공지 및 승인 절차
- **패치**: 긴급 시 사전 공지 없이 적용 가능
- **업데이트/업그레이드**: 릴리즈 노트 및 적용 가이드 제공, 고객과 일정 조율 필수

#### 5.4.2 위험 관리
- **사전 검증**: 테스트 환경에서 호환성 체크
- **백업 정책**: 업그레이드 전 필수 백업 수행
- **EOS/EOL 정책**: 버전별 지원 기간 사전 공지

#### 5.4.3 비용 투명성
- **계약서 명시**: 주요 업그레이드 권리 명확화
- **견적 기준**: 노력 인건비 등 명확한 산정 기준 제시

---

## 6. 장애 대응 체계 및 에스컬레이션 프로세스

### 6.1 개요
장애 대응 체계는 서비스 중단이나 오류 발생 시 신속하고 체계적으로 문제를 복구하여 비즈니스 영향을 최소화하기 위한 프로세스입니다. 장애(Incident)는 서비스의 질 저하나 중단을 초래하는 예기치 않은 이벤트로, 가능한 한 빨리 정상 상태로 복원하는 것이 목표입니다.

### 6.2 에스컬레이션 유형

#### 6.2.1 기능적 에스컬레이션
- **정의**: 기술적 난이도에 따라 더 전문적인 인력에게 이관
- **대상**: 전문 엔지니어, 개발팀, 벤더 기술지원

#### 6.2.2 수직적 에스컬레이션
- **정의**: 영향 범위나 비즈니스 임팩트에 따라 관리 계층에 보고
- **대상**: 팀장, 임원, 고객사 경영진

### 6.3 장애 대응 절차

#### 6.3.1 기본 프로세스
1. **감지**: 모니터링 시스템 또는 사용자 제보
2. **등록**: Service Desk 티켓 발행
3. **진단**: 장애 등급 분류 (P1~P4) 및 영향도 파악
4. **복구**: 단계별 기술지원 투입
   - 1선: 즉각 조치 가능한 기본 대응
   - 2선: 심화 기술지원팀 원인 분석
   - 3선: 제품 벤더/개발팀 전문 지원
5. **보고**: 복구 완료 후 사후 보고서 작성

#### 6.3.2 심각한 장애 (P1) 대응
- 관리자 및 고객사 주요 인사에게 즉시 상황 전파
- 필요시 비상회의 소집으로 자원 총동원
- Problem Management 단계로 근본원인 분석 진행

### 6.4 에스컬레이션 매트릭스

#### 6.4.1 시간 기반 에스컬레이션
- **P1 장애**: 1시간 내 복구 미달 시 자동 트리거
- **30분 경과**: CTO 보고 및 벤더 긴급 지원 요청
- **1시간 경과**: 고객사 임원 브리핑

#### 6.4.2 SLA 기반 에스컬레이션
- 서비스 수준 협약 임계치 초과 시 즉각 최고기술책임자 보고
- 전면 서비스 중단 시 비즈니스 연속성 계획(BCP) 발동

### 6.5 책임 체계

#### 6.5.1 일차 대응
- **서비스 데스크**: 장애 접수 및 초기 대응
- **운영 NOC팀**: 24시간 모니터링 및 1차 조치

#### 6.5.2 전문 지원
- **애플리케이션 엔지니어(L2)**: 소프트웨어 관련 장애 대응
- **인프라 엔지니어**: 하드웨어/네트워크 장애 대응
- **전문 엔지니어/개발자(L3)**: 고도의 기술적 문제 해결

#### 6.5.3 관리 계층
- **운영팀장 → IT서비스 총괄관리자**: 수직적 보고 라인
- **최고경영진**: DR 절차 및 BCP 발동 의사결정
- **문제관리 책임자**: 장애 종료 후 후속 조치
- **품질관리팀**: 대응 프로세스 리뷰 및 개선

### 6.6 운영 가이드라인

#### 6.6.1 비상 대응 체계
- **24x7 비상 연락망**: 콜 트리(Call Tree) 구축
- **On-Call 일정**: 주요 엔지니어 교대 당번 관리
- **표준 운영 절차(SOP)**: 장애 유형별 대응 매뉴얼

#### 6.6.2 역량 강화
- **모의 장애(Drill)**: 정기적 훈련으로 대응 숙련도 향상
- **지식 베이스**: 해결 사례 축적 및 활용
- **장애 티켓 시스템**: 모든 이력 기록 및 추적

#### 6.6.3 사후 관리
- **사후 회고(Post-mortem)**: 개선점 도출 미팅
- **근본원인분석(RCA) 보고서**: 주요 장애 투명 공유
- **재발방지 대책**: 시스템 및 프로세스 개선

---

## 7. 정기점검 및 보고 체계 (PM)

### 7.1 개요
정기점검(PM, Preventive Maintenance)은 시스템을 정해진 주기마다 점검하여 잠재적인 문제를 발견하고 선제 조치함으로써 장애를 예방하는 유지보수 활동입니다. 월간이나 분기 단위로 수행되며, 하드웨어부터 소프트웨어, 보안 상태까지 전반을 진단합니다.

### 7.2 정기점검 절차

#### 7.2.1 사전 준비
- **연간 PM 일정표**: 고객과 합의된 시간대 설정 (예: 매월 셋째 주 금요일 02:00~06:00)
- **점검 계획 공지**: 1주일 전 작업 내용 및 영향도 안내
- **체크리스트 준비**: 표준화된 점검 항목 목록

#### 7.2.2 점검 수행 항목
- **시스템 자원 점검**: CPU, 메모리, 디스크 사용률 확인
- **로그 분석**: 장애 징후 및 오류 패턴 탐지
- **성능 튜닝**: 시스템 최적화 및 조정 작업
- **백업 검증**: 백업 정상 동작 및 복구 가능성 확인
- **보안 점검**: 패치 적용 상태 및 취약점 스캔
- **하드웨어 예방 정비**: 팬 청소, 케이블 점검 등

#### 7.2.3 사후 처리
- **즉시 조치**: 발견된 경미한 문제 현장 해결
- **후속 작업**: 시간이 소요되는 개선사항 일정 협의
- **결과 기록**: 점검 결과 및 조치 내용 문서화

### 7.3 보고 체계

#### 7.3.1 정기점검 결과 보고서
- **점검 개요**: 일시, 대상 시스템 목록, 수행 항목
- **점검 결과**: 각 항목별 상태 및 측정값
- **조치 내용**: 수행한 작업 및 해결된 문제
- **권고사항**: 발견된 문제 및 개선 제안

#### 7.3.2 월간 유지보수 보고서
- **운영 현황**: 장애/요청 처리 통계
- **성능 지표**: 시스템 성능 추이 분석
- **자원 사용량**: CPU, 메모리, 스토리지 통계
- **SLA 달성률**: 가용성, 응답시간 목표 달성 현황

#### 7.3.3 경영진 보고
- **분기별 운영보고 회의**: 중요 고객 대상 정기 보고
- **유지보수 실적 평가**: SLA 충족률, 고객만족도 평가
- **개선사항 추적**: 권고사항 이행 현황 관리

### 7.4 책임 체계

#### 7.4.1 실행 조직
- **유지보수 기술팀**: PM 담당 엔지니어의 점검 수행 책임
- **서비스 매니저/PM**: 일정 관리 및 고객 조율
- **품질보증(QA) 담당자**: 보고서 검수 및 품질 관리

#### 7.4.2 검토 및 승인
- **서비스 데스크 매니저**: 보고서 최종 검토
- **고객사 IT운영 책임자**: 보고서 검토 및 피드백 제공
- **사업부장/경영진**: 월간 운영보고서 검토 및 의사결정

### 7.5 운영 가이드라인

#### 7.5.1 자동화 활용
- **스크립트 기반 점검**: 로그 스캔, 성능 데이터 수집 자동화
- **보안 취약점 스캐닝**: 자동화된 보안 점검 도구 활용
- **객관적 데이터 확보**: 수치 기반 점검 결과 도출

#### 7.5.2 데이터 분석 및 활용
- **트렌드 분석**: 과거 점검 데이터 축적 및 패턴 분석
- **선제적 제언**: 데이터 기반 장비 증설 등 개선안 제시
- **시각화**: 대시보드 및 그래프를 통한 이해도 향상

#### 7.5.3 지속적 개선
- **PDCA 사이클**: 점검-개선-적용-확인의 순환 프로세스
- **이력 관리**: 개선 조치 내용 및 이행 여부 추적
- **품질 향상**: 정기점검 결과 기반 서비스 품질 개선

---

## 8. 보안패치 및 CVE 대응 절차

### 8.1 개요
보안패치는 시스템이나 소프트웨어의 보안 취약점을 해소하기 위해 제공되는 업데이트를 의미하며, CVE(Common Vulnerabilities and Exposures)는 공개된 보안 취약점에 부여되는 고유 식별자입니다. CVE 대응 절차는 새로운 취약점이 발표되었을 때 자사 시스템에 미치는 영향을 평가하고 필요한 보안 조치를 수행하는 과정입니다.

### 8.2 CVE 대응 절차

#### 8.2.1 취약점 정보 모니터링
- **일일 모니터링**: 벤더 보안공지, KISA/CERT 권고문, CVE 목록 확인
- **정보 수집**: 주요 OS, DB, 미들웨어, 프레임워크의 신규 패치 구독
- **신속 대응**: 취약점 정보 발표 즉시 내부 공유

#### 8.2.2 영향도 평가
- **시스템 식별**: 당사 운영 환경의 해당 제품/버전 취약점 여부 확인
- **심각도 분류**: CVSS 점수 기반 긴급도 분류 (Critical/High/Medium/Low)
- **영향 범위**: 인터넷 노출 여부, 중요 시스템 영향도 평가

#### 8.2.3 패치 계획 수립
- **벤더 패치 확인**: 각 시스템별 적용 가능한 패치 버전 조사
- **테스트 계획**: 스테이징 환경에서의 검증 절차 수립
- **일정 협의**: 고객과 패치 적용 시간 및 다운타임 창구 확보

#### 8.2.4 패치 적용 및 조치
- **패치 설치**: 예정된 시간에 보안패치 적용
- **완화조치**: 패치 미제공 시 설정 변경, 방화벽 차단 등 임시 대응
- **순차 적용**: 롤링 업데이트 방식으로 서비스 중단 최소화

#### 8.2.5 검증 및 보고
- **정상성 확인**: 시스템 정상 동작 및 취약점 해결 여부 검증
- **취약점 재검사**: 스캐너 도구 또는 PoC 테스트로 해결 확인
- **보고서 작성**: 내부 CISO 조직 및 고객 대상 적용 결과 보고

### 8.3 책임 체계

#### 8.3.1 보안 조직
- **정보보호팀**: 취약점 정보 수집/분석 및 적용 필요성 결정
- **보안 담당 엔지니어**: CVE 대응 절차 주도 및 관리

#### 8.3.2 운영 조직
- **시스템 관리자**: 서버 패키지 업데이트 등 실제 패치 적용
- **운영팀**: 패치 적용 작업 협력 및 시스템 모니터링

#### 8.3.3 개발 및 승인
- **개발팀**: 애플리케이션 레벨 취약점 소스 코드 수정
- **변경 승인자(CAB)**: 패치 일정 및 방법 승인
- **서비스 매니저**: 고객 조율 및 일정 관리

### 8.4 운영 가이드라인

#### 8.4.1 패치 관리 체계
- **패치 대장**: 시스템별 현재 패치 레벨 및 미적용 목록 관리
- **중앙 관리**: WSUS, 패치 관리 솔루션 도입으로 효율성 향상
- **취약점 대응 SLA**: CVSS 점수별 대응 시간 기준 설정

#### 8.4.2 예방 및 대비
- **보안 코딩**: 개발 단계부터 보안 가이드 준수
- **정기 진단**: 취약점 진단(모의해킹) 실시
- **백업 계획**: 패치 적용 후 문제 발생 시 롤백 방안 준비

#### 8.4.3 지속적 개선
- **완화조치 데이터베이스**: 패치 미제공 시 임시 대응 방안 축적
- **호환성 테스트**: 패치 적용 전 철저한 사전 검증
- **교육 및 훈련**: 보안 패치 대응 역량 강화



# 09. 백업 정책 (Backup Policy)

## 📋 개요
백업 정책은 중요한 데이터와 시스템을 보호하기 위한 운영 규정으로, 데이터를 언제, 어떤 방법으로 백업하고 저장하며 검증할 것인지를 정의합니다. 장애나 재해 발생 시 데이터 손실을 최소화하고 신속한 복구를 목표로 합니다.

## ⏰ 백업 주기

### 기본 백업 스케줄
- **일일 백업**: 증분 백업 (매일 심야 시간)
- **주간 백업**: 전체 백업 (주말)
- **월간 백업**: 장기 보관용 전체 백업

### 업무 중요도별 백업 주기
| 시스템 유형 | 백업 주기 | 비고 |
|------------|----------|------|
| 데이터베이스 | 매일 증분 + 주간 전체 | 트랜잭션 로그 별도 백업 |
| 파일서버 | 일 1회 스냅샷 | 중요 파일은 실시간 미러링 |
| 금융/거래 시스템 | 실시간 이중화 + 로그 백업 | RPO ≈ 0 |

### RPO 기반 백업 주기 결정
- **RPO (Recovery Point Objective)**: 허용 가능한 데이터 손실 한계
- RPO가 낮을수록 백업 주기를 짧게 설정
- 업무 마감 시점에 애드혹 백업 추가 수행

## 💾 백업 방식 및 형식

### 1. 풀백업 (Full Backup)
- **특징**: 모든 데이터를 통째로 백업
- **장점**: 복구 간편
- **단점**: 데이터량 크고 시간 소요
- **주기**: 주간/월간

### 2. 증분백업 (Incremental Backup)
- **특징**: 마지막 백업 이후 변경분만 백업
- **장점**: 속도 빠름, 저장공간 절약
- **단점**: 복구 시 체인이 길어짐
- **주기**: 일간

### 3. 차등백업 (Differential Backup)
- **특징**: 마지막 풀백업 이후 변경된 모든 데이터 백업
- **장점**: 중간 체인이 짧음
- **단점**: 시간이 갈수록 백업량 증가

### 4. 스냅샷 백업
- **특징**: 스토리지/가상화 레벨에서 시점 이미지 생성
- **장점**: 거의 실시간 백업 가능
- **적용**: 데이터베이스 Archive Log 모드 운용

### 백업 매체 및 저장소
- **디스크 백업 장치 (D2D)**
- **테이프 (Tape)**
- **클라우드 스토리지**

### 3-2-1 백업 원칙
- **3개**의 데이터 복사본
- **2종류** 매체에 저장
- **1개**는 원격지(오프사이트) 보관

## ✅ 검증 절차

### 1. 백업 로그 모니터링
- 매 백업 작업 후 로그 검토
- 백업 소프트웨어 리포트 일일 점검
- 성공/실패 여부 확인

### 2. 샘플 복원 테스트
- **주기**: 분기별 또는 반기별
- **방법**: 랜덤 백업본을 테스트 서버에 복원
- **검증**: 데이터 정합성 및 파일 무결성 확인

### 3. 체크섬/무결성 검사
- 백업 시 생성된 체크섬 값 활용
- 백업 파일 손상 여부 정기 검증
- 백업 소프트웨어 검증 기능 활용

### 4. DR 훈련 겸 복구 테스트
- **주기**: 연 1회
- **내용**: 전체 시스템 복구 시나리오 실행
- **목적**: 엔드투엔드 복구 검증

## 👥 책임 주체

### 1차 책임자: 시스템 관리자/DBA
- 백업 스케줄 설정 및 작업 수행
- 백업 모니터링 및 관리

### 전략 수립: 아키텍트/IT 인프라 책임자
- 백업 전략 수립
- 백업 정책 결정

### 감독: 정보보호 책임자(CISO)/IT서비스관리 관리자
- 전체 이행 여부 감독
- 정책 준수 점검

### 운영: 운영팀 근무자
- 백업 로그 확인 (주간/야간 교대)
- 백업 실패 시 즉각 조치

## 💡 운영 팁

### 백업 매트릭스 관리
시스템별로 다음 항목을 표로 정리:
- 풀/증분 백업 여부
- 백업 주기
- 보관 기간
- 저장 위치

### 백업 보관 주기 예시
- **일별 증분**: 2주 보관
- **주간 전체**: 3개월 보관
- **월간 전체**: 1년 보관

### 보안 고려사항
- **백업 암호화** 적용
- 백업 매체 이동 시 보안 유의
- 백업 데이터 유출 방지

### 성능 최적화
- 네트워크 대역폭 점검
- 스토리지 성능 모니터링
- 백업 윈도우 최적화

### 백업/복구 시나리오 문서화
- 사고 유형별 복구 절차서 작성
- "어떤 백업으로 어떻게 복구할 것인가" 상세 기술
- 위기 상황 대응 가이드라인 포함



## 10. 재해복구(DR) 정책

### 📋 개요
재해복구(DR) 정책은 대규모 재해나 지역적 장애로 주 데이터센터가 불능이 될 경우 업무 연속성을 보장하기 위한 대비책입니다.

### 🎯 핵심 지표
- **RTO (Recovery Time Objective)**: 복구 목표 시간 (예: 4시간 내 핵심 서비스 복원)
- **RPO (Recovery Point Objective)**: 허용되는 데이터 손실 시점 목표

### 🚨 장애 유형별 대응 시나리오

#### 1) 단일 서버 장애
- **대응**: 이중화(HA) 구성을 통한 자동 Failover
- **절차**: 정상 서버로 서비스 지속 → 장애 서버 수리 → 클러스터 복귀

#### 2) 주요 애플리케이션 장애
- **대응**: 백업 데이터 복구 및 애플리케이션 재기동
- **우선순위**: 본 센터 내 신속 복구 (DB Point-in-Time Recovery)
- **예외**: 복구 지연 시 DR 사이트 전환 고려

#### 3) 데이터센터 전체 장애
- **대응**: DR 센터로 서비스 절체
- **절차**: DR 선언 → 네트워크 라우팅 전환 → DR 센터에서 서비스 재개

#### 4) 지역 재해 (Wide-area Disaster)
- **대응**: 클라우드 기반 DR 또는 3중센터 전략
- **특징**: 원격 핵심 기능 유지, 외부 파트너 지원 활용

#### 5) 사이버 재난 (랜섬웨어 등)
- **대응**: 네트워크 격리 → 백업 데이터 활용 → 새로운 시스템 구축
- **핵심**: 감염 확산 방지 및 깨끗한 시스템 재구축

### 🔄 DR 체계 및 절차

#### 평시 준비사항
- 데이터 복제 구성 (실시간 또는 주기적)
- DR 센터 인프라 상시 대기
- 정기 DR 전환 테스트 (연 1회)

#### 유사시 절차
1. **재해 발생 판단** (시설팀/운영팀 협의)
2. **DR 실행 선언** (DR 팀 소집)
3. **시스템 전환** (DR Runbook 기반 작업 수행)
4. **복구 후 원복** (본센터 복구 시 failback 절차)

### 👥 책임 주체
- **총괄**: BCP/DR 담당 부서 (정보전략팀)
- **지휘**: CIO 또는 DR 총괄임원
- **실행**: DR 대응팀 (인프라, 애플리케이션, 지원파트)
- **대외**: 홍보/고객지원팀 (커뮤니케이션)

---

## 11. 모니터링 및 품질관리 체계

### 📋 개요
서비스가 SLA 기준에 부합하도록 실시간 감시하고, 성과 지표를 분석하여 서비스 품질을 지속 개선하는 관리 체계입니다.

### 📊 모니터링 체계

#### 24x7 모니터링 시스템
- **APM 도구**: 트랜잭션 처리량, 응답속도 실시간 수집
- **통합 대시보드**: 서버 자원(CPU, 메모리, Disk) 한눈에 모니터링
- **알림 시스템**: 임계치 초과 시 SMS/이메일 자동 발송
- **로그 분석**: ELK 등을 통한 오류 로그 상시 분석

### 📈 품질 지표 관리 (KPI)

#### 1) SLA 준수율
- 합의된 SLA 항목별 달성률 계산
- 예시: 99.9% 가용성 목표 대비 실제 달성률
- 분기별 고객 리뷰 실시

#### 2) MTTR (평균 복구 시간)
- 장애 발생~해결 소요시간 평균
- 장애 심각도별 분석
- 지속적 단축이 목표

#### 3) MTBF (평균 고장 간격)
- 서비스 안정성 지표
- 장애 발생 사이의 평균 시간
- 예방 조치 효과 측정

#### 4) 백로그/처리율
- 미해결 요청/장애 건수 모니터링
- 월별 처리 완료율 산정
- 적정 수준 유지를 위한 조정

#### 5) 고객만족도
- 유지보수 지원 피드백 점수화
- 정기 설문조사 실시

### 📋 보고 및 개선 프로세스

#### 정기 보고
- **주간/월간**: SLA 달성여부, 주요 지표 현황
- **SLA 미달시**: 서비스 개선 계획(SIP) 수립
- **품질관리 회의**: Root Cause Analysis(RCA) 리뷰

#### 지속적 개선
- **Problem Management**: 반복 문제의 근본 해결
- **용량 계획**: 자원 한계 감지 시 선제 투자
- **CSI 활동**: 능동적 품질 향상 프로세스

---

## 12. 계약 관리 및 견적 절차

### 📋 개요
유지보수 서비스 계약의 전체 라이프사이클과 신규/추가 작업에 대한 견적 산출을 체계적으로 관리하는 프로세스입니다.

### 📝 계약 관리 절차

#### 1) 계약 체결
- **표준 계약서**: 서비스 범위, SLA, 지원시간, 비용, 기간 명시
- **특별 조항**: 전담인력 파견, 성능보장 등 부속서 작성
- **협의 완료**: 양측 서명으로 계약 발효

#### 2) 이행 및 변경
- **정기 점검**: 계약 이행 내용 주기적 확인
- **범위 변경**: 계약 변경 합의서 또는 추가 견적서 작성
- **예시**: 관리 대상 시스템 추가 시 유지보수료 증액

#### 3) 갱신(연장)
- **사전 확인**: 만료 1~2개월 전 연장 의사 확인
- **조건 조정**: 만족도 평가 및 조건 재협상
- **우대 조건**: 우수 서비스 시 최대 3년 자동 연장

#### 4) 종료 및 정리
- **종료 확인서**: 계약 종료 공식 문서화
- **인수인계**: 다른 업체/내부팀으로 전환 지원
- **자산 반환**: 장비, 문서, 계정 권한 회수

### 💰 견적 절차

#### 1) 요건 파악
- 고객 요구사항 접수 및 분석
- 기술팀과 협력하여 작업 범위/난이도 파악

#### 2) 비용 산정
- **표준 요율**: 기존 계약 요율 참고
- **맨데이 방식**: 개발공수 × 단가 + 테스트공수
- **투명한 산출**: 인력 등급, 투입 기간 명시

#### 3) 견적서/제안서 작성
- 항목별 비용, 산출 근거, 일정, 산출물 명시
- 서비스 등급별 향상 내용과 비용 증감 제시

#### 4) 내부 승인
- 대규모 견적: 영업 임원/사업 부문장 승인
- 원가팀 검토: 적정 마진 확보 확인

#### 5) 고객 협상
- 서비스 항목과 비용의 trade-off 설명
- 할인 한계율 내에서 협상
- 최종 확정: 수정 견적서 또는 계약 부속 합의

### 👥 책임 주체
- **총괄**: 영업/사업관리 담당자
- **기술 지원**: 유지보수 팀장/아키텍트
- **비용 검토**: 재무팀/견적 담당자
- **법률 검토**: 법무팀 (필요시)
- **서비스 관리**: 서비스 매니저

---

## 13. 문서 양식

### 📋 개요
유지보수 운영에서 사용하는 주요 문서 양식들로, 업무 절차를 표준화하고 정보를 체계적으로 기록하기 위한 도구입니다.

### 📑 주요 문서 양식

#### 1) 유지보수 계약서
- **구성**: 목적, 범위, 기간, 대가, SLA, 페널티, 종료조건 등
- **부속서**: 세부 SLA, 유지보수 대상 목록, 요율 산정표
- **특징**: 1년 단위 자동연장 또는 상호 협의 연장 조항 포함

#### 2) SR 양식 (서비스 요청서)
**필수 항목**
- 요청 일자, 요청자 정보
- 요청 제목, 상세 내용
- 긴급도/우선순위, 관련 시스템
- 원하는 완료 기한

**관리 요소**
- 고유 SR 번호 부여
- 상태 관리 (접수, 진행중, 완료)
- 완료 시 결과 기재

#### 3) CR 양식 (변경 요청서)
**주요 내용**
- 변경 요청 배경/목적
- 상세 요구사항 (현행 vs 변경 후)
- 영향도 분석, 예상 소요 자원
- 긴급성, 요청자 승인

**관리 프로세스**
- Change Advisory Board(CAB) 승인 필수
- 관련 SR 참조번호 연결
- 변경 이력 체계적 관리

#### 4) 장애 보고서 (Incident Report)
**보고 내용**
- 장애 개요, 영향범위
- 원인 분석, 대응 경과
- 복구 시간, 후속 조치

**작성 원칙**
- 장애 대응 후 24시간 이내 작성
- 시간대별 주요 조치 타임라인 포함
- 관련 로그 첨부, 재발 방지대책 명시

#### 5) 정기 운영 보고서
**구성 요소**
- **표지**: 기간, 담당자, 버전
- **요약**: Executive Summary (임원용)
- **본문**: 
  - SLA 지표 현황표
  - 주요 장애/지원 내역
  - 시스템 자원 추이 그래프
  - 정기점검/패치 목록
  - 향후 계획 및 건의사항

**버전 구분**
- **고객용**: 고객 영향도 높은 내용, 성과 강조
- **사내용**: 원가, 내부 프로세스 개선사항 포함

#### 6) 기타 문서 양식
- **인수인계 확인서**: 신규 직원 투입 시 업무 인계 기록
- **회의록**: 정기 회의 논의내용, 액션아이템, 책임자 명시
- **접근권한 신청/회수 양식**: 운영 계정 발급/회수 문서화

### 💡 운영 팁

#### 문서 품질 관리
- **표준화**: ISO 인증을 위한 양식 표준화
- **버전 관리**: 모든 양식에 개정이력 및 승인자 기록
- **교육**: 표준 양식 사용법 직원 교육
- **샘플 제공**: 작성 가이드 및 기입 예시 제공

#### 전자화 및 관리
- **전자 양식**: Confluence, SharePoint 폼 활용
- **중앙 보관**: 체계적인 문서 보관소 운영
- **폴더링**: 년도/고객별 분류로 빠른 검색 지원
- **백업**: 중요 문서의 별도 보관 (금고, 전자시스템)

#### 문서 중심 문화
- **원칙**: "쓰여지지 않은 것은 수행되지 않은 것"
- **지식자산화**: 모든 유지보수 활동 문서 기록
- **추적성**: 문서를 통한 업무 이력 관리
- **품질 향상**: 문서 기반 프로세스 개선


## 14. 교육 및 전담조직 운영방식

### 14.1 전담조직 구성
유지보수 서비스의 효율적 제공을 위해 **3선 계층 구조**로 전담조직을 운영합니다.

#### 1선 (Service Desk)
- **역할**: 고객 문의 접수, 1차 해결, 티켓 발행 및 분류
- **구성**: Help Desk, 콜센터 형태
- **주요업무**: 
  - 간단한 오류 조치
  - FAQ 답변
  - 매뉴얼화된 해결책 제공

#### 2선 (전문 엔지니어)
- **역할**: 심화 기술지원 및 현장 대응
- **구성**: DB 전문가, 시스템 관리자, 어플리케이션 분석가
- **주요업무**:
  - 1선 미해결 문제 원인 분석
  - 현장 출동 또는 원격 접속 조치
  - 솔루션별 전문 기술지원

#### 3선 (개발팀 지원)
- **역할**: 소스코드 레벨 수정 및 패치 제작
- **구성**: 개발 조직 또는 R&D 부서
- **주요업무**:
  - 버그 수정 및 기능 개선
  - 패치 릴리스
  - 제조사/공급사 2차 지원 협력

### 14.2 운영방식
- **24x7 서비스**: 교대 근무제 및 On-call 체제
- **전담 TAM**: 중요 고객 대상 기술계정관리자 배정
- **협업 시스템**: 티켓 시스템과 협업 도구 연동
- **지식공유**: 주간 운영회의 및 기술 리뷰 세미나

### 14.3 교육 제도
#### 온보딩 교육
- 제품 구조 및 고객 환경 이해
- ITIL 프로세스 교육
- 보안정책 및 변경관리 절차

#### 정기 교육
- **기술 교육**: 데이터베이스 성능튜닝, 네트워크 보안 등
- **프로세스 교육**: 변경관리, 보안정책 등
- **외부 교육**: 제조사 공인 자격 취득 과정
- **멘토링**: 선배-신입 간 현장 코칭

### 14.4 지식관리 시스템
- **Knowledge Base**: 해결된 장애 및 Q&A 축적
- **KMDB**: 과거 유사 사례 검색 시스템
- **기술 동향**: 세미나 참석 및 정보공유 세션

### 14.5 조직 문화 관리
- **워라밸**: 교대제 휴식 및 대체 휴가 제공
- **스트레스 관리**: 상담 스킬 교육, 감정노동 보호
- **팀워크**: 백업 지원 문화 및 성과 축하 문화

---

## 15. ITIL/ISO27001 연계 관리 지침

### 15.1 ITIL 연계 운영
#### 주요 프로세스 적용
- **Incident Management**: 우선순위별 대응, Knowledge Base 업데이트
- **Problem Management**: 근본원인 해결 및 재발 방지
- **Change Management**: CAB 승인, 영향도 분석, 백아웃 플랜
- **Service Level Management**: SLA 주기적 검토 및 개선

#### 모범사례 적용
- **변경관리 7단계**: 요청 → 승인 → 계획 → 테스트 → 승인2 → 적용 → 검토
- **CAB 운영**: 정기 회의를 통한 변경 심의 및 리스크 평가
- **포스트모템**: 심각한 장애 후 원인 분석 및 문서화

### 15.2 ISO27001 연계 보안 통제
#### 주요 통제 항목
- **백업 관리** (A.12.3): 주기적 백업 및 복원 테스트
- **취약점 관리** (A.12.6): CVE 대응 및 시기적절한 패치 적용
- **접근 통제** (A.9): 최소 권한 원칙, 퇴직 시 권한 회수
- **로그 모니터링** (A.12.4): 시스템 모니터링 및 로그 검토
- **사업 연속성** (A.17): DR 계획 수립 및 정기 테스트

### 15.3 실무 적용 가이드
- **현실적 적용**: 변경 등급별 차등 승인 프로세스
- **문서 간소화**: 템플릿 단순화 및 자동화 도구 활용
- **정기 감사**: 내부 점검을 통한 개선점 도출
- **교육 지원**: ITIL Foundation, ISO27001 내부 심사원 교육

---

## 16. 주요 고객/산업군 특화 요구사항

### 16.1 금융권 고객
#### 특화 요구사항
- **높은 가용성**: 99.99% SLA 요구
- **긴급 대응**: 15분 내 통보, 1시간 내 임시복구
- **보안 강화**: 주기적 취약점 점검, 엄격한 접근통제
- **규제 대응**: 금융감독원 장애 보고 의무

#### 운영 특성
- 심야 배치작업 시간에만 정기점검 허용
- 이중화/DR 최고 수준 유지
- 모든 작업 사전 승인 필수

### 16.2 공공기관 고객
#### 특화 요구사항
- **보안 규정**: 신원 조회 및 보안서약 필수
- **감사 대응**: 정기 보안 감사 자료 준비
- **성과 평가**: SLA 기준 미달 시 패널티 적용
- **보고 체계**: 관계 부처 장애 보고 절차

#### 운영 특성
- 전자정부 표준 준수
- 보안관제센터 통보 절차
- 여유 있는 SLA 관리

### 16.3 제조/물류 고객
#### 특화 요구사항
- **생산 스케줄 연동**: 공장 가동에 맞춘 점검 일정
- **현장 안전**: 산업안전 교육 이수 필수
- **OT 연계**: 운영기술 환경 고려
- **피크 대응**: 월말/분기말 변경 동결

### 16.4 의료/헬스케어 고객
#### 특화 요구사항
- **무중단 서비스**: 다운타임 제로 수준 요구
- **개인정보 보호**: 실데이터 접근 제한, 마스킹 처리
- **고가용성**: Active-Active 이중 데이터센터
- **상주 지원**: 365일 현장 지원 체계

### 16.5 대기업 그룹사
#### 특화 요구사항
- **IT 거버넌스**: 그룹 표준 프로세스 준수
- **통합 시스템**: 그룹 티켓 시스템 연동
- **보안 연동**: 그룹 보안솔루션 로그 연계
- **평가 체계**: 그룹 공통 SLA 지표 적용

### 16.6 특화 서비스 운영 가이드
#### 반영 방식
- 계약 시 별도 부속합의 또는 SLA 조항 추가
- 내부 매뉴얼에 고객별 커스터마이징 절차 기술
- 전담 조직 편성 및 현장 상주 인력 배치
- 산업 특성 교육 병행

#### 운영 원칙
- 고객별 지원 가이드 작성 및 최신 유지
- 산업 동향 모니터링 및 선제적 대응
- 표준 프로세스 기반 "플러그인" 방식 커스터마이징
- 특화 요구사항의 전체 서비스 확대 적용 검토



